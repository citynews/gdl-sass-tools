// scss-lint:disable PropertySortOrder VendorPrefix
// $MIXINS ------------------------------------------------------------------ //
@import 'maps';


// Animation ------------------------------------------------------------------ //
//
@mixin animation($name, $duration,$timing,$delay,$iteration,$direction) {
  
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing;
  animation-delay: $delay;
  animation-iteration-count: $iteration;
  animation-direction: $direction;
}


// Background image --------------------------------------------------------- //
//
@mixin  bgimg($position,$repeat,$size) {
  background-position: $position;
  background-repeat: $repeat;
  background-size: $size;
}

// Border -------------------------------------------------------------------- //
//
@mixin border($width,$style,$color) {
  border-style: $style;
  border-width: $widh;
  border-bottom-color: $color;
}

// Borders settings  -------------------------------------------------------- //
//
@mixin border-box($boxsizing: border-box) {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin border-top-radius($radii) {
  border-top-left-radius: $radii;
  border-top-right-radius: $radii;
}

@mixin border-right-radius($radii) {
  border-bottom-right-radius: $radii;
  border-top-right-radius: $radii;
}

@mixin border-bottom-radius($radii) {
  border-bottom-left-radius: $radii;
  border-bottom-right-radius: $radii;
}

@mixin border-left-radius($radii) {
  border-bottom-left-radius: $radii;
  border-top-left-radius: $radii;
}

@mixin rounded($radius) {
  -webkit-border-radius : $radius;
  -moz-border-radius : $radius;
  border-radius : $radius;
}

// Box shadow --------------------------------------------------------------- //
//
@mixin box-shadow($shadow) {
  -webkit-box-shadow : $shadow;
  -moz-box-shadow : $shadow;
  box-shadow : $shadow;
}

// Clearfix ------------------------------------------------------------------//
//
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Columns Grid --------------------------------------------------------------//	
//	
 @mixin grid($breakpoint) {	
  @media (min-width: map-get($breakpoints, $breakpoint)) {	
    @for $col from 1 through 12 {	
      .o-cell-#{$col}\@#{$breakpoint} {	
        width: 8.333333% * $col;	
      }	
    }	
  }	
};

// Flexbox SASS mixins--------------------------------------------------------//
// The spec: http://www.w3.org/TR/css3-flexbox
@mixin flx($direction:column,$wrap:wrap,$justify:flex-start,$align:flex-start) {
  display: -webkit-flex;
  display: flex;

  -webkit-flex-direction: $direction;
  flex-direction: $direction;

  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;

  justify-content: $justify;
  -webkit-justify-content: $justify;

  justify-content: $align;
  -webkit-justify-content: $align;

}
// Flexbox display
//
@mixin flexbox() {
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  flex: $values;
  -webkit-flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  flex-direction: $direction;
  -webkit-flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  flex-flow: $flow;
  -webkit-flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  order: $val;
  -webkit-flex-order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  flex-grow: $grow;
  -webkit-flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  flex-shrink: $shrink;
  -webkit-flex-grow: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  flex-basis: $width;
  -webkit-flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  justify-content: $justify;
  -webkit-justify-content: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  justify-content: $align;
  -webkit-justify-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  align-items: $align;
  -webkit-align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  align-self: $align;
  -webkit-align-self: $align;
  
}

// Gradient ------------------------------------------------------------------//
//
@mixin gradient {
  background-image: linear-gradient(-180deg, rgba(33,33,33,0.00) 0%, rgba(33,33,33,0.67) 30%, $color-black 100%);
}

// Media queries -------------------------------------------------------------//
//
@mixin bp($bp, $rule: min-width) {
  @media screen and (#{$rule}: map-get($breakpoints, $bp)) {
      @content;
  }
}

// Orientation media query
//
@mixin orientation($orientation) {// Prefixer ----------------------------------------------------------------- //

  @if $orientation == landscape {
    @media only screen and (orientation: landscape) {
      @content
    }
  } @else {
      @media only screen and (orientation: portrait) {
        @content
      }
  }
};

// Position ----------------------------------------------------------------- //
//
@mixin atr($position: absolute, $top:0, $right:0){}
@mixin atl($position: absolute, $top:0, $left:0){}
@mixin abr($position: absolute, $bottom:0, $right:0){}
@mixin abl($position: absolute, $bottom:0, $left:0){}
@mixin ftl($position: fixed, $top:0, $left:0){}
@mixin ftr($position: fixed, $top:0, $right:0){}
@mixin fbr($position: fixed, $bottom:0, $right:0){}
@mixin fbl($position: fixed, $bottom:0, $left:0){}

// Pseudo Element -------------------------------------------------------------//
//
@mixin pseudo ($top:0,$left:0,$bottom:auto, $right:auto,$width: 100%, $height:100%) {
  position: absolute;
  content: '';
}

// Transform -----------------------------------------------------------------//
//
@mixin transform($value) {
  transform: $value;
  -webkit-transform: $value;
}

// Transition ----------------------------------------------------------------//
//
@mixin transition($transition...) {
  // A shorthand property for setting the four transition properties into a single property
  transition:         $transition;
  -webkit-transition: $transition;
}

// Z-index -------------------------------------------------------------------- //
//
@mixin z($key){
  @if map-has-key($z-index, $key) {
    z-index: map-get($z-index, $key);
  }
  @else {
    z-index: $key;
  }
}